name: Build Error Analysis Report

on:
  workflow_run:
    workflows: ["Create New Release"]
    types:
      - completed

jobs:
  analyze_build_errors:
    name: Analyze Build Errors
    runs-on: macos-15
    if: github.event.workflow_run.conclusion == 'failure'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Git LFS
        run: |
          git lfs install
          git lfs pull

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Download Artifacts
        run: |
          # Make scripts executable
          chmod +x scripts/ci/*.sh
          
          # Download artifacts using the helper script
          ./scripts/ci/download-artifacts.sh "${{ github.event.workflow_run.id }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Build Error Analysis
        id: analysis
        run: |
          # No special Python libraries needed - using standard library only
          
          # Run analysis script
          if [ -f "build_log.txt" ]; then
            echo "Analyzing build log..."
            python3 scripts/ci/auto-fix-build-errors.py build_log.txt || echo "Analysis completed with errors"
            
            # Check if reports were generated
            if [ -f "build_error_report.html" ]; then
              echo "report_generated=true" >> $GITHUB_OUTPUT
              echo "✅ Build error report generated successfully"
            else
              echo "report_generated=false" >> $GITHUB_OUTPUT
              echo "⚠️ No error report was generated"
            fi
          else
            echo "::error::Build log not found!"
            echo "report_generated=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Upload Error Reports
        if: steps.analysis.outputs.report_generated == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: build-error-reports
          path: |
            build_error_report.html
            build_error_report.txt
            build_error_report.json
          retention-days: 30

      - name: Generate Summary
        if: steps.analysis.outputs.report_generated == 'true'
        run: |
          # Use the dedicated script to generate the GitHub step summary
          ./scripts/ci/generate-report-summary.sh

      - name: Determine PR Number
        id: pr-finder
        if: github.event.workflow_run.event == 'pull_request' && steps.analysis.outputs.report_generated == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            // Get PR number from the workflow run
            const run = await github.rest.actions.getWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }}
            });
            
            // Extract PR number from the run data
            const prNumber = run.data.pull_requests[0]?.number;
            if (prNumber) {
              console.log(`Found PR number: ${prNumber}`);
              return prNumber;
            } else {
              console.log("Could not determine PR number from workflow run");
              return '';
            }
          result-encoding: string

      - name: Create Comment on PR
        if: github.event.workflow_run.event == 'pull_request' && steps.analysis.outputs.report_generated == 'true' && steps.pr-finder.outputs.result != ''
        run: |
          # Use dedicated script to create PR comment
          ./scripts/ci/create-pr-comment.sh "${{ steps.pr-finder.outputs.result }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
